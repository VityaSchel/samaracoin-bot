import { getBalanaceByID } from './balance.js'
import { rollDice } from './dice.js'
import { cutInt } from './utils.js'
import $D from 'dedent'

const betToString = bet => bet === 'all' ? '–í–µ—Å—å –±–∞–ª–∞–Ω—Å' : `${bet} SAMARACOIN`

export const casinoSamara = msg => {
  global.bot.sendMessage(
    msg.chat.id,
    $D`–°—ã–≥—Ä–∞–π—Ç–µ –≤ –°–∞–º–∞—Ä—Å–∫–æ–µ –∫–∞–∑–∏–Ω–æ: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b><u>–≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</u></b> \
       (–∏–ª–∏ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ) –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —ç–º–æ–¥–∑–∏: üé≤ –∏–ª–∏ üé∞

       –ï—Å–ª–∏ –≤–∞–º –≤—ã–ø–∞–¥–µ—Ç 1 –∫—Ä–∞—Å–Ω–∞—è —Ç–æ—á–∫–∞ üé≤ –Ω–∞–≤–µ—Ä—Ö—É –∫—É–±–∏–∫–∞, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ \
       6—Ö —Å—Ç–∞–≤–∫–∏, –µ—Å–ª–∏ –Ω–µ –≤—ã–ø–∞–¥–∞–µ—Ç, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ –≤—Å—é —Å—Ç–∞–≤–∫—É.

       –ï—Å–ª–∏ –≤–∞–º –≤—ã–ø–∞–¥–∞–µ—Ç —Ç—Ä–∏ —Å–µ–º–µ—Ä–∫–∏ üé∞ –Ω–∞ —Å–ª–æ—Ç–∞—Ö, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 64—Ö —Å—Ç–∞–≤–∫–∏.
       –ï—Å–ª–∏ –≤–∞–º –≤—ã–ø–∞–¥–∞–µ—Ç —Ç—Ä–∏ BAR, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 32—Ö —Å—Ç–∞–≤–∫–∏.
       –ï—Å–ª–∏ –≤–∞–º –≤—ã–ø–∞–¥–∞–µ—Ç —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —è–≥–æ–¥—ã –Ω–∞ —Å–ª–æ—Ç–∞—Ö (üçã –∏–ª–∏ üçá), –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 16—Ö —Å—Ç–∞–≤–∫–∏.
       –ï—Å–ª–∏ –≤ —Ä—è–¥ –Ω–∏—á–µ–≥–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–≥–æ –Ω–µ –≤—ã–ø–∞–¥–∞–µ—Ç, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç–µ –≤—Å—é —Å—Ç–∞–≤–∫—É.

       –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /betsamara (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ${DEFAULT_CASINO_BET} SAMARACOIN)

       <b><u>–ë–æ—Ç –∏–≥—Ä–∞–µ—Ç —Å –≤–∞–º–∏ –≤ –∫–∞–∑–∏–Ω–æ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –ª—é–±–æ–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</u></b>`,
    { reply_to_message_id: msg.message_id })
}

export const setBet = async (msg, args) => {
  let newBet = args[0]
  if(newBet === undefined) {
    const currentBet = await getCurrentBet(msg.from.id)
    global.bot.sendMessage(
      msg.chat.id,
      `–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å—Ç–∞–≤–∫–∞ –¥–ª—è –∫–∞–∑–∏–Ω–æ: ${betToString(currentBet)}. \n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—É—é: <pre>/betsamara (—á–∏—Å–ª–æ)</pre> –ò–õ–ò <pre>/betsamara all</pre>`,
      { reply_to_message_id: msg.message_id, parse_mode: 'HTML' }
    )
  } else {
    if(newBet !== 'all') newBet = cutInt(newBet)
    if(newBet <= 0 || !newBet || newBet === Infinity){
      return global.bot.sendMessage(
        msg.chat.id,
        '–°—Ç–∞–≤–∫–∞ –¥–ª—è –∫–∞–∑–∏–Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –±–æ–ª—å—à–µ –Ω—É–ª—è –ò–õ–ò —Å–ª–æ–≤–æ–º <pre>all</pre> (–≤–µ—Å—å –±–∞–ª–∞–Ω—Å) \n–ù–∞–ø—Ä–∏–º–µ—Ä, <pre>/betsamara 0.0001</pre> –ò–õ–ò <pre>/betsamara all</pre>',
        { reply_to_message_id: msg.message_id, parse_mode: 'HTML' }
      )
    } else {
      await saveNewBet(msg.from.id, newBet)
      global.bot.sendMessage(
        msg.chat.id,
        `–í–∞—à–∞ –Ω–æ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¥–ª—è –∫–∞–∑–∏–Ω–æ: ${betToString(newBet)}`,
        { reply_to_message_id: msg.message_id }
      )
    }
  }
}

const DEFAULT_CASINO_BET = 0.000100
const getCurrentBet = async userID => {
  const collection = global.db.collection('balance')
  const user = await collection.findOne({ userID })
  const bet = user?.casinoBet
  if(bet === undefined) return DEFAULT_CASINO_BET
  else if(bet === 'all') return 'all'
  else return cutInt(bet)
}

const saveNewBet = async (userID, newBet) => {
  const collection = global.db.collection('balance')
  await collection.updateOne({ userID }, { $set: { casinoBet: newBet } })
}

export async function playCasino(msg) {
  const balance = await getBalanaceByID(msg.from.id)
  const personalBet = await getCurrentBet(msg.from.id)
  const allIn = personalBet === 'all'
  const neededBalance = allIn ? balance : personalBet

  if(balance < neededBalance){
    return global.bot.sendMessage(
      msg.chat.id,
      `–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç SAMARACOIN –¥–ª—è –∏–≥—Ä—ã –≤ –∫–∞–∑–∏–Ω–æ. –°—Ç–∞–≤–∫–∞: ${allIn ? '–≤–µ—Å—å –≤–∞—à –±–∞–ª–∞–Ω—Å' : personalBet}, —É –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É: ${balance}`,
      { reply_to_message_id: msg.message_id }
    )
  }

  if(allIn && balance === 0){
    return global.bot.sendMessage(
      msg.chat.id,
      '–£ –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É <pre>0 SAMARACOIN</pre>, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞: –≤–µ—Å—å –±–∞–ª–∞–Ω—Å. –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É: <pre>/betsamara (—á–∏—Å–ª–æ)</pre>',
      { reply_to_message_id: msg.message_id, parse_mode: 'HTML' }
    )
  }


  const betMultiplier = rollDice(msg)
  const balanceDelta = neededBalance * betMultiplier

  const newBalance = cutInt(balance + balanceDelta)
  const collection = global.db.collection('balance')
  collection.updateOne({ userID: msg.from.id }, { $set: { balance: newBalance } })

  const success = betMultiplier > 0
  let message = success
    ? `–°—Ç–∞–≤–∫–∞ —Å—ã–≥—Ä–∞–ª–∞! –í—ã–∏–≥—Ä—ã—à: <pre>${balanceDelta} SAMARACOIN</pre>.`
    : `–°—Ç–∞–≤–∫–∞ –Ω–µ —Å—ã–≥—Ä–∞–ª–∞. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ <pre>${-balanceDelta} SAMARACOIN</pre>.`

  if(success && allIn)
    message += '\n–í—ã —Å—Ç–∞–≤–∏–ª–∏ –≤–µ—Å—å –±–∞–ª–∞–Ω—Å, –ø–æ—ç—Ç–æ–º—É –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å, –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ SAMARACOINS. –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É: <pre>/betsamara (—á–∏—Å–ª–æ)</pre>'

  message += '\n–ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–Ω–∏–º –∏–∑ —ç–º–æ–¥–∑–∏: üé≤ –∏–ª–∏ üé∞. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: /casinosamara'

  const emojiTimeout = { 'üé≤': 3000, 'üé∞': 1500 }
  setTimeout(() => {
    global.bot.sendMessage(msg.chat.id, message, { reply_to_message_id: msg.message_id, parse_mode: 'HTML' })
  }, emojiTimeout[msg.dice.emoji])
}
